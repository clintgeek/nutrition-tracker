# Build stage - using the latest LTS Node.js
FROM node:18-alpine as build

# Set working directory
WORKDIR /app

# Set environment variables
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Copy package files first for better caching
COPY package.json ./

# Simple install with minimal settings
RUN npm config set registry http://registry.npmjs.org/ && \
    npm config set strict-ssl false

# Install dependencies without audit or peer dependency checking
RUN npm install --legacy-peer-deps --no-audit

# Copy the rest of the app
COPY . .

# Simply export the web app
RUN npx expo export:web

# Production stage
FROM nginx:alpine

# Copy the built web app from the build stage
COPY --from=build /app/web-build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]