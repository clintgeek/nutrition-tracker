# Build stage with newer Node version
FROM node:18-alpine as build

# Set working directory
WORKDIR /app

# Set environment variables for better npm behavior
ENV NPM_CONFIG_REGISTRY=http://registry.npmjs.org/
ENV NPM_CONFIG_STRICT_SSL=false
ENV NPM_CONFIG_LOGLEVEL=verbose
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Use Yarn instead of npm
RUN apk add --no-cache yarn

# Copy package files
COPY package.json package-lock.json* ./

# Convert to yarn and install dependencies
RUN yarn import || true
RUN yarn install --network-timeout 300000 || yarn install --ignore-scripts --network-timeout 300000

# Copy the rest of the app
COPY . .

# Build the web app using yarn
RUN yarn export:web || yarn run export:web || npx expo export:web

# Production stage
FROM nginx:alpine

# Copy the built web app from the build stage
COPY --from=build /app/web-build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]